buildscript {
    repositories {
        mavenCentral()
        maven { setUrl("https://maven.vaadin.com/vaadin-prereleases") }
    }
}
plugins {
    // https://plugins.gradle.org/plugin/org.springframework.boot
    id 'org.springframework.boot' version '3.1.3'
    // https://plugins.gradle.org/plugin/io.spring.dependency-management
    id 'io.spring.dependency-management' version '1.1.3'
    // https://mvnrepository.com/artifact/org.graalvm.buildtools/native-gradle-plugin
//    id 'org.graalvm.buildtools.native' version '0.9.25'
    id 'java'
    id 'com.vaadin'
}

repositories {
    mavenCentral()
    maven { setUrl("https://maven.vaadin.com/vaadin-prereleases") }
    maven { setUrl("https://maven.vaadin.com/vaadin-addons") }
}

java {
    sourceCompatibility = '17'
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    implementation('com.vaadin:vaadin-spring-boot-starter')
    implementation('com.vaadin:collaboration-engine')
    testImplementation('com.vaadin:vaadin-testbench-junit5')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-starter-validation')
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    compileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")

    def immutablesVersion = "2.9.2"
    compileOnly "org.immutables:value:$immutablesVersion"
    annotationProcessor "org.immutables:value:$immutablesVersion"

    runtimeOnly('org.postgresql:postgresql')
    implementation('org.parttio:line-awesome:1.1.0')
    implementation('com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0')
}

dependencyManagement {
    imports {
        mavenBom "com.vaadin:vaadin-bom:$vaadinVersion"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

//graalvmNative {
//    binaries.all {
//        resources.autodetect()
//    }
//    toolchainDetection = false
//}
////-Pvaadin.productionMode
//graalvmNative {
//    binaries {
//        main {
//            javaLauncher = javaToolchains.launcherFor {
//                languageVersion = JavaLanguageVersion.of(17)
//                vendor = JvmVendorSpec.matching("GraalVM Community")
//            }
//        }
//    }
//}
